// import apiSlice from "./api";

import { createApi } from "@reduxjs/toolkit/query/react"
import { baseQueryWithReauth } from "./api"
const adminBaseQuery = async (args, api, extraOptions) => {
    return baseQueryWithReauth(args, api, { ...extraOptions, isAdmin: true });
  };

export const adminApi=createApi({
    reducerPath: "adminApi",
    baseQuery: adminBaseQuery,
    endpoints:(builder)=>({
        adminLogin:builder.mutation({
            query:(form)=>({
                url:'/admin/login',
                method:'POST',
                body:form
            }),
        }),
        getUserLists:builder.query({
            query:({page,limit,sortBy})=>`/admin/getuserslist?page=${page}&limit=${limit}&sortBy=${sortBy}`,
            providesTags:['getUserLists']
        }),
        userBlock:builder.mutation({
            query:({id})=>({
                url:'/admin/user-block',
                method:'POST',
                body:{id}
            }),
            invalidatesTags:['getUserLists']
        }),
        addCategory:builder.mutation({
            query:(form)=>({
                url:'/admin/add-category',
                method:"POST",
                body:form
            }),
            invalidatesTags:['getCategory']
        }),
        getCategory:builder.query(({
            query:({page,limit})=>`/admin/get-category?page=${page}&limit=${limit}`,
            providesTags:['getCategory']
        })),
        getActiveCategory:builder.query(({
            query:()=>"/admin/get-active-category",
            providesTags:['getCategory']
        })),
        categoryBlock:builder.mutation({
            query:({id})=>({
                url:'/admin/category-block',
                method:'POST',
                body:{id}
            }),
            invalidatesTags:['getCategory']
        }),
        addproduct:builder.mutation({
            query:(form)=>({
                url:'/admin/add-product',
                method:'POST',
                body:form
            }),
            invalidatesTags:['getProducts']
        }),
        getProducts:builder.query({
            query:({page,limit,filter,sortBy})=>`/admin/get-products?page=${page}&limit=${limit}&filter=${filter}&sortBy=${sortBy}`,
            providesTags:['getProducts']
        }),
        productBlock:builder.mutation({
            query:({id})=>({
                url:'/admin/product-block',
                method:'POST',
                body:{id}
            }),
            invalidatesTags:['getProducts','listProducts']
        }),
        editCategory:builder.mutation({
            query:(form)=>({
                url:'/admin/edit-category',
                method:'POST',
                body:form
            }),
            invalidatesTags:['getCategory']
        }),
        getEditProduct:builder.query({
            query:({product_id})=>`/admin/get-edit-product?product_id=${product_id}`,
            providesTags:['getEditProduct']
        }),
        editProduct:builder.mutation({
            query:(form)=>({
                url:'/admin/edit-product',
                method:'PUT',
                body:form
            }),
            invalidatesTags:['getProducts','getEditProduct']
        }),
        getAdminProfile:builder.query({
            query:()=>'/admin/get-profile'
        }),
        getOrdersDetails:builder.query({
            query:({page,limit})=>`/admin/get-orderDetials?page=${page}&limit=${limit}`,
            providesTags:['getOrderDetails']
        }),
        changeOrderStatus:builder.mutation({
            query:({user_id,action,order_id,product_id,quantity})=>({
                url:'admin/change-order-status',
                method:'PUT',
                body:{user_id,action,order_id,product_id,quantity}
            }),
            invalidatesTags:['getOrderDetails','getSalesReport']
        }),
        addCoupons:builder.mutation({
            query:(form)=>({
                url:'/admin/add-coupon',
                method:'POST',
                body:form
            }),
            invalidatesTags:['getCoupons']
        }),
        getCoupons:builder.query({
            query:({page,limit})=>`/admin/get-coupons?page=${page}&limit=${limit}`,
            providesTags:['getCoupons']
        }),
        blockCoupon:builder.mutation({
            query:({id})=>({
                url:'/admin/block-coupon',
                method:'PUT',
                body:{id}
            }),
            invalidatesTags:['getCoupons']
        }),
        addOffer:builder.mutation({
            query:(form)=>({
                url:'/admin/add-offer',
                method:'POST',
                body:form
            })
        }),
        getProductsForOffer:builder.query({
            query:()=>'/admin/get-productsForOffer'
        }),
        getOffers:builder.query({
            query:({page,limit,sortBy})=>`/admin/get-offers?page=${page}&limit=${limit}&sortBy=${sortBy}`,
            providesTags:['getOffers']
        }),
        blockOffer:builder.mutation({
            query:({id})=>({
                url:'/admin/block-offers',
                method:'POST',
                body:{id}
            }),
            invalidatesTags:['getOffers']
        }),
        getSalesReport:builder.query({
            query:({sortBy,startDate,endDate,productsPerPage,currentPage})=>`/admin/get-sales-report?sortBy=${sortBy}&startDate=${startDate}&endDate=${endDate}&productsPerPage=${productsPerPage}&currentPage=${currentPage}`,
            providesTags:['getSalesReport']
        }),
        getTopTenProducts:builder.query({
            query:()=>'/admin/get-top-ten-products'
        }),
        getTopFiveCategory:builder.query({
            query:()=>'/admin/get-top-five-category'
        }),
        getGraphDate:builder.query({
            query:({period})=>`/admin/get-graph-data?period=${period}`
        })
    })
})

export const{
    useAdminLoginMutation,
    useGetUserListsQuery,
    useUserBlockMutation,
    useAddCategoryMutation,
    useGetCategoryQuery,
    useCategoryBlockMutation,
    useAddproductMutation,
    useGetProductsQuery,
    useProductBlockMutation,
    useEditCategoryMutation,
    useGetEditProductQuery,
    useEditProductMutation,
    useGetActiveCategoryQuery,
    useGetAdminProfileQuery,
    useGetOrdersDetailsQuery,
    useChangeOrderStatusMutation,
    useAddCouponsMutation,
    useGetCouponsQuery,
    useBlockCouponMutation,
    useAddOfferMutation,
    useGetProductsForOfferQuery,
    useGetOffersQuery,
    useBlockOfferMutation,
    useGetSalesReportQuery,
    useGetTopFiveCategoryQuery,
    useGetTopTenProductsQuery,
    useGetGraphDateQuery
}=adminApi